input {
  lumberjack {
    port => 5000
    type => "logs"
    ssl_certificate => "/etc/pki/tls/certs/logstash-forwarder.crt"
    ssl_key => "/etc/pki/tls/private/logstash-forwarder.key"
  }
  file {
     path => "/log-generator/app.log"
  }
}
filter {
   grok {
      patterns_dir => "./patterns"
      match => ["message","%{LOG_DATE:log_date} \[%{NOTSPACE:thread}\] %{LOGLEVEL:log_level} %{NOTSPACE:classname} - %{GREEDYDATA:msg}"]
   }
}
 
filter {
   date {
      match => ["log_date","dd-MM-YYYY HH:mm:ss.SSS"]
   }
}
 
filter {
   kv {
      field_split => ","
      source => "msg"
   }
}
 
filter {
   if [classname] =~ /SellRequest$/ {
      mutate { add_tag => "sell" }
   } else if [classname] =~ /SearchRequest$/ {
      mutate { add_tag => "search" }
   }
}
 
filter {
   mutate {    
      remove_field => [ "msg" ]
   }  
}
 
filter {
   mutate {
      convert => [ "id", "integer" ]
   }
   mutate {
      convert => [ "price", "float" ]
   }
}
 
filter {
   mutate {
      split => [ "options", "|" ]
   }
}
 
filter {
   geoip {
      source => "ip"
      database => "/log-generator/GeoLiteCity.dat"
   }
}
 
filter {
 mutate {
  add_field => [ "[geoip][lnglat]", "%{[geoip][longitude]}", "tmplat", "%{[geoip][latitude]}" ]
 }
 mutate {
  merge => [ "[geoip][lnglat]", "tmplat" ]
 }
 mutate {
  convert => [ "[geoip][lnglat]", "float" ]
  remove_field => [ "tmplat" ]
 }
}
output{
  elasticsearch { }
}
